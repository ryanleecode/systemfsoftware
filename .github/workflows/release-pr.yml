name: Release PR

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release type"
        required: true
        default: "auto"
        type: choice
        options:
          - auto
          - patch
          - minor
          - major
          - prerelease

# Minimal permissions
permissions:
  contents: write
  pull-requests: write

# Cancel in-progress release PR runs
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # Set up pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v4

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Configure git
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Run version bump and create PR
      - name: Run version bump and create PR
        id: version-bump
        run: |
          # Run nx release version to bump versions and update changelogs (no auto-commit)
          if [ "${{ github.event.inputs.version }}" = "auto" ]; then
            echo "ü§ñ Using automatic version detection from conventional commits..."
            pnpm exec nx release version --git-commit=false --git-tag=false --verbose
          else
            echo "üìå Using manual version specifier: ${{ github.event.inputs.version }}"
            pnpm exec nx release version ${{ github.event.inputs.version }} --git-commit=false --git-tag=false --verbose
          fi

          # Check if there are any staged changes (Nx Release auto-stages files)
          if git diff --cached --quiet; then
            echo "No changes to release"
            echo "has-changes=false" >> $GITHUB_OUTPUT
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
          fi

      # Create Pull Request using peter-evans action (it will handle branch creation and management)
      - name: Create Release PR
        if: steps.version-bump.outputs.has-changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "release/auto-${{ github.run_number }}"
          commit-message: "chore(release): version bump for ${{ github.event.inputs.version }} release"
          title: "üöÄ Release: ${{ github.event.inputs.version }} version bump"
          body: |
            ## Release PR

            This PR contains version bumps and changelog updates for the next release.

            **Release Type:** ${{ github.event.inputs.version }}

            ### What's included:
            - Version bumps for affected packages
            - Updated changelogs
            - Git tags (will be created after merge)

            ### Next steps:
            1. Review the changes
            2. Merge this PR
            3. Run the "Release" workflow to publish packages

            ---

            *This PR was created automatically by the Release PR workflow.*
          base: master
          delete-branch: true

      # Comment if no changes
      - name: No changes comment
        if: steps.version-bump.outputs.has-changes == 'false'
        run: |
          echo "‚ÑπÔ∏è No changes detected for release. All packages are up to date."
